/* programa para ordenacao por selecao de
   uma matriz com dez elementos. */

int vet[ 10 ];

int minloc ( int a[], int low, int high )
{	int i; int x; int k;
	k = low;
	x = a[low];
	i = low + 1;
	while (i < high){
		if (a[i] < x){
			x = a[i];
			k = i;
		}
		i = i + 1;
	}
	return k;
}

void sort( int a[], int low, int high)
{	int i; int k;
	i = low;
	while (i < high-1){
		int t;
		k = minloc(a,i,high);
		t = a[k];
		a[k] = a[i];
		a[i] = t;
		i = i + 1;
	}
}

void main(void)
{
	int i;
	i = 0;
	while (i < 4){
		vet[i] = input();
		i = i + 1;
	}
	sort(vet,0,4);
	i = 0;
	while (i < 4){
		output(vet[i]);
		i = i + 1;
	}
}

/*Código intermediário:*/

0  : (function, minloc, , ) 
1  : (assign, k, low, ) 
2  : (assign_vet, a, low, t1) 
3  : (assign, x, t1, ) 
4  : (addition, low, 1, t2) 
5  : (assign, i, t2, ) 
6  : (label, L1, , ) 
7  : (less_than, i, high, t3) 
8  : (jump_if_false, t3, L2, ) 
9  : (assign_vet, a, i, t4) 
10  : (less_than, t4, x, t5) 
11  : (jump_if_false, t5, L3, ) 
12  : (assign_vet, a, i, t6) 
13  : (assign, x, t6, ) 
14  : (assign, k, i, ) 
15  : (label, L3, , ) 
16  : (addition, i, 1, t7) 
17  : (assign, i, t7, ) 
18  : (go_to, L1, , ) 
19  : (label, L2, , ) 
20  : (return, k, , ) 
21  : (return, 0, , ) 
22  : (function, sort, , ) 
23  : (assign, i, low, ) 
24  : (label, L5, , ) 
25  : (subtraction, high, 1, t8) 
26  : (less_than, i, t8, t9) 
27  : (jump_if_false, t9, L6, ) 
28  : (arg, a, , ) 
29  : (arg, i, , ) 
30  : (arg, high, , ) 
31  : (function_call, minloc, 3, ) 
32  : (assign_ret, t10, RT, ) 
33  : (assign, k, t10, ) 
34  : (assign_vet, a, k, t11) 
35  : (assign, t, t11, ) 
36  : (assign_vet, a, i, t12) 
37  : (assign_end_vet, a, k, t13) 
38  : (assign, t13, t12, ) 
39  : (assign_end_vet, a, i, t14) 
40  : (assign, t14, t, ) 
41  : (addition, i, 1, t15) 
42  : (assign, i, t15, ) 
43  : (go_to, L5, , ) 
44  : (label, L6, , ) 
45  : (return, 0, , ) 
46  : (function, main, , ) 
47  : (assign, i, 0, ) 
48  : (label, L7, , ) 
49  : (less_than, i, 4, t16) 
50  : (jump_if_false, t16, L8, ) 
51  : (sys_call, input, , ) 
52  : (assign_ret, t17, RT, ) 
53  : (assign_end_vet, vet, i, t18) 
54  : (assign, t18, t17, ) 
55  : (addition, i, 1, t19) 
56  : (assign, i, t19, ) 
57  : (go_to, L7, , ) 
58  : (label, L8, , ) 
59  : (arg, vet, , ) 
60  : (arg, 0, , ) 
61  : (arg, 4, , ) 
62  : (function_call, sort, 3, ) 
63  : (assign_ret, t20, RT, ) 
64  : (assign, i, 0, ) 
65  : (label, L9, , ) 
66  : (less_than, i, 4, t21) 
67  : (jump_if_false, t21, L10, ) 
68  : (assign_vet, vet, i, t22) 
69  : (arg, t22, , ) 
70  : (sys_call, output, 1, ) 
71  : (addition, i, 1, t24) 
72  : (assign, i, t24, ) 
73  : (go_to, L9, , ) 
74  : (label, L10, , ) 

/* Assembly: */

     0: loadi $r0 0
     1: loadi $stp 0
     2: loadi $ra 0
     3: jmpi main
minloc:
     4: subi $stp $stp 1
     5: pop $r1 $stp
     6: loadi $rl 10
     7: store $r1 $rl
     8: subi $stp $stp 1
     9: pop $r1 $stp
     10: loadi $rl 11
     11: store $r1 $rl
     12: subi $stp $stp 1
     13: pop $r1 $stp
     14: loadi $rl 12
     15: store $r1 $rl
     16: loadi $r1 15
     17: loadi $rl 11
     18: load $r2 $rl
     19: store $r2 $r1
     20: loadi $rl 10
     21: load $r1 $rl
     22: loadi $rl 11
     23: load $r2 $rl
     24: add $r4 $r1 $r2
     25: load $r3 $r4
     26: loadi $r1 14
     27: store $r3 $r1
     28: loadi $rl 11
     29: load $r1 $rl
     30: loadi $r2 1
     31: add $r3 $r1 $r2
     32: loadi $r1 13
     33: store $r3 $r1
L1.
     34: loadi $rl 13
     35: load $r1 $rl
     36: loadi $rl 12
     37: load $r2 $rl
     38: lt $r3 $r1 $r2
     39: jei $r0 $r3 L2
     40: loadi $rl 10
     41: load $r1 $rl
     42: loadi $rl 13
     43: load $r2 $rl
     44: add $r4 $r1 $r2
     45: load $r3 $r4
     46: loadi $rl 14
     47: load $r1 $rl
     48: lt $r2 $r3 $r1
     49: jei $r0 $r2 L3
     50: loadi $rl 10
     51: load $r1 $rl
     52: loadi $rl 13
     53: load $r2 $rl
     54: add $r4 $r1 $r2
     55: load $r3 $r4
     56: loadi $r1 14
     57: store $r3 $r1
     58: loadi $r1 15
     59: loadi $rl 13
     60: load $r2 $rl
     61: store $r2 $r1
L3.
     62: loadi $rl 13
     63: load $r1 $rl
     64: loadi $r2 1
     65: add $r3 $r1 $r2
     66: loadi $r1 13
     67: store $r3 $r1
     68: jmpi L1
L2.
     69: loadi $r1 15
     70: load $rt $r1
     71: jmp $ra
     72: loadi $rt 0
     73: jmp $ra
sort:
     74: subi $stp $stp 1
     75: pop $r1 $stp
     76: loadi $rl 16
     77: store $r1 $rl
     78: subi $stp $stp 1
     79: pop $r1 $stp
     80: loadi $rl 17
     81: store $r1 $rl
     82: subi $stp $stp 1
     83: pop $r1 $stp
     84: loadi $rl 18
     85: store $r1 $rl
     86: loadi $r1 19
     87: loadi $rl 17
     88: load $r2 $rl
     89: store $r2 $r1
L5.
     90: loadi $rl 18
     91: load $r1 $rl
     92: loadi $r2 1
     93: sub $r3 $r1 $r2
     94: loadi $rl 19
     95: load $r1 $rl
     96: lt $r2 $r1 $r3
     97: jei $r0 $r2 L6
     98: push $ra $stp
     99: addi $stp $stp 1
     100: loadi $rl 18
     101: load $r1 $rl
     102: push $r1 $stp
     103: addi $stp $stp 1
     104: loadi $rl 19
     105: load $r1 $rl
     106: push $r1 $stp
     107: addi $stp $stp 1
     108: loadi $rl 16
     109: load $r1 $rl
     110: push $r1 $stp
     111: addi $stp $stp 1
     112: jal minloc
     113: subi $stp $stp 1
     114: pop $ra $stp
     115: move $r1 $rt
     116: loadi $r2 20
     117: store $r1 $r2
     118: loadi $rl 16
     119: load $r1 $rl
     120: loadi $rl 20
     121: load $r2 $rl
     122: add $r4 $r1 $r2
     123: load $r3 $r4
     124: loadi $r1 21
     125: store $r3 $r1
     126: loadi $rl 16
     127: load $r1 $rl
     128: loadi $rl 19
     129: load $r2 $rl
     130: add $r4 $r1 $r2
     131: load $r3 $r4
     132: loadi $rl 16
     133: load $r1 $rl
     134: loadi $rl 20
     135: load $r2 $rl
     136: add $r4 $r1 $r2
     137: store $r3 $r4
     138: loadi $rl 16
     139: load $r1 $rl
     140: loadi $rl 19
     141: load $r2 $rl
     142: add $r3 $r1 $r2
     143: loadi $rl 21
     144: load $r1 $rl
     145: store $r1 $r3
     146: loadi $rl 19
     147: load $r1 $rl
     148: loadi $r2 1
     149: add $r3 $r1 $r2
     150: loadi $r1 19
     151: store $r3 $r1
     152: jmpi L5
L6.
     153: loadi $rt 0
     154: jmp $ra
main:
     155: loadi $r1 22
     156: loadi $r2 0
     157: store $r2 $r1
L7.
     158: loadi $rl 22
     159: load $r1 $rl
     160: loadi $r2 4
     161: lt $r3 $r1 $r2
     162: jei $r0 $r3 L8
     163: in $rt
     164: move $r1 $rt
     165: loadi $r2 0
     166: loadi $rl 22
     167: load $r3 $rl
     168: add $r4 $r2 $r3
     169: store $r1 $r4
     170: loadi $rl 22
     171: load $r1 $rl
     172: loadi $r2 1
     173: add $r3 $r1 $r2
     174: loadi $r1 22
     175: store $r3 $r1
     176: jmpi L7
L8.
     177: push $ra $stp
     178: addi $stp $stp 1
     179: loadi $r1 4
     180: push $r1 $stp
     181: addi $stp $stp 1
     182: loadi $r1 0
     183: push $r1 $stp
     184: addi $stp $stp 1
     185: loadi $r1 0
     186: push $r1 $stp
     187: addi $stp $stp 1
     188: jal sort
     189: subi $stp $stp 1
     190: pop $ra $stp
     191: move $r1 $rt
     192: loadi $r2 22
     193: loadi $r3 0
     194: store $r3 $r2
L9.
     195: loadi $rl 22
     196: load $r2 $rl
     197: loadi $r3 4
     198: lt $r4 $r2 $r3
     199: jei $r0 $r4 L10
     200: loadi $r2 0
     201: loadi $rl 22
     202: load $r3 $rl
     203: add $r5 $r2 $r3
     204: load $r4 $r5
     205: out $r4
     206: loadi $rl 22
     207: load $r2 $rl
     208: loadi $r3 1
     209: add $r4 $r2 $r3
     210: loadi $r2 22
     211: store $r4 $r2
     212: jmpi L9
L10.

/* conjunto de instruções em binário:*/

mem_ram[0] = 32'b001101_00000_000000000000000000000; //['loadi', '$r0', '0']
mem_ram[1] = 32'b001101_11101_000000000000000000000; //['loadi', '$r29', '0']
mem_ram[2] = 32'b001101_11111_000000000000000000000; //['loadi', '$r31', '0']
mem_ram[3] = 32'b010000_00000_000000000000010011011; //['jmpi', 'main']
mem_ram[4] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[5] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[6] = 32'b001101_11110_000000000000000001010; //['loadi', '$r30', 10]
mem_ram[7] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[8] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[9] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[10] = 32'b001101_11110_000000000000000001011; //['loadi', '$r30', 11]
mem_ram[11] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[12] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[13] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[14] = 32'b001101_11110_000000000000000001100; //['loadi', '$r30', 12]
mem_ram[15] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[16] = 32'b001101_00001_000000000000000001111; //['loadi', '$r1', 15]
mem_ram[17] = 32'b001101_11110_000000000000000001011; //['loadi', '$r30', 11]
mem_ram[18] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[19] = 32'b001110_00010_00001_0000000000000000; //['store', '$r2', '$r1']
mem_ram[20] = 32'b001101_11110_000000000000000001010; //['loadi', '$r30', 10]
mem_ram[21] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[22] = 32'b001101_11110_000000000000000001011; //['loadi', '$r30', 11]
mem_ram[23] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[24] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[25] = 32'b001100_00011_00100_0000000000000000; //['load', '$r3', '$r4']
mem_ram[26] = 32'b001101_00001_000000000000000001110; //['loadi', '$r1', 14]
mem_ram[27] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[28] = 32'b001101_11110_000000000000000001011; //['loadi', '$r30', 11]
mem_ram[29] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[30] = 32'b001101_00010_000000000000000000001; //['loadi', '$r2', '1']
mem_ram[31] = 32'b000001_00011_00001_00010_00000000000; //['add', '$r3', '$r1', '$r2']
mem_ram[32] = 32'b001101_00001_000000000000000001101; //['loadi', '$r1', 13]
mem_ram[33] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[34] = 32'b001101_11110_000000000000000001101; //['loadi', '$r30', 13]
mem_ram[35] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[36] = 32'b001101_11110_000000000000000001100; //['loadi', '$r30', 12]
mem_ram[37] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[38] = 32'b011111_00011_00001_00010_00000000000; //['lt', '$r3', '$r1', '$r2']
mem_ram[39] = 32'b100010_00000_00011_0000000001000101; //['jei', '$r0', '$r3', 'L2']
mem_ram[40] = 32'b001101_11110_000000000000000001010; //['loadi', '$r30', 10]
mem_ram[41] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[42] = 32'b001101_11110_000000000000000001101; //['loadi', '$r30', 13]
mem_ram[43] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[44] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[45] = 32'b001100_00011_00100_0000000000000000; //['load', '$r3', '$r4']
mem_ram[46] = 32'b001101_11110_000000000000000001110; //['loadi', '$r30', 14]
mem_ram[47] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[48] = 32'b011111_00010_00011_00001_00000000000; //['lt', '$r2', '$r3', '$r1']
mem_ram[49] = 32'b100010_00000_00010_0000000000111110; //['jei', '$r0', '$r2', 'L3']
mem_ram[50] = 32'b001101_11110_000000000000000001010; //['loadi', '$r30', 10]
mem_ram[51] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[52] = 32'b001101_11110_000000000000000001101; //['loadi', '$r30', 13]
mem_ram[53] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[54] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[55] = 32'b001100_00011_00100_0000000000000000; //['load', '$r3', '$r4']
mem_ram[56] = 32'b001101_00001_000000000000000001110; //['loadi', '$r1', 14]
mem_ram[57] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[58] = 32'b001101_00001_000000000000000001111; //['loadi', '$r1', 15]
mem_ram[59] = 32'b001101_11110_000000000000000001101; //['loadi', '$r30', 13]
mem_ram[60] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[61] = 32'b001110_00010_00001_0000000000000000; //['store', '$r2', '$r1']
mem_ram[62] = 32'b001101_11110_000000000000000001101; //['loadi', '$r30', 13]
mem_ram[63] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[64] = 32'b001101_00010_000000000000000000001; //['loadi', '$r2', '1']
mem_ram[65] = 32'b000001_00011_00001_00010_00000000000; //['add', '$r3', '$r1', '$r2']
mem_ram[66] = 32'b001101_00001_000000000000000001101; //['loadi', '$r1', 13]
mem_ram[67] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[68] = 32'b010000_00000_000000000000000100010; //['jmpi', 'L1']
mem_ram[69] = 32'b001101_00001_000000000000000001111; //['loadi', '$r1', 15]
mem_ram[70] = 32'b001100_11100_00001_0000000000000000; //['load', '$r28', '$r1']
mem_ram[71] = 32'b010001_11111_000000000000000000000; //['jmp', '$r31']
mem_ram[72] = 32'b001101_11100_000000000000000000000; //['loadi', '$r28', '0']
mem_ram[73] = 32'b010001_11111_000000000000000000000; //['jmp', '$r31']
mem_ram[74] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[75] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[76] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[77] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[78] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[79] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[80] = 32'b001101_11110_000000000000000010001; //['loadi', '$r30', 17]
mem_ram[81] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[82] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[83] = 32'b100100_00001_11101_0000000000000000; //['pop', '$r1', '$r29']
mem_ram[84] = 32'b001101_11110_000000000000000010010; //['loadi', '$r30', 18]
mem_ram[85] = 32'b001110_00001_11110_0000000000000000; //['store', '$r1', '$r30']
mem_ram[86] = 32'b001101_00001_000000000000000010011; //['loadi', '$r1', 19]
mem_ram[87] = 32'b001101_11110_000000000000000010001; //['loadi', '$r30', 17]
mem_ram[88] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[89] = 32'b001110_00010_00001_0000000000000000; //['store', '$r2', '$r1']
mem_ram[90] = 32'b001101_11110_000000000000000010010; //['loadi', '$r30', 18]
mem_ram[91] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[92] = 32'b001101_00010_000000000000000000001; //['loadi', '$r2', '1']
mem_ram[93] = 32'b000011_00011_00001_00010_00000000000; //['sub', '$r3', '$r1', '$r2']
mem_ram[94] = 32'b001101_11110_000000000000000010011; //['loadi', '$r30', 19]
mem_ram[95] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[96] = 32'b011111_00010_00001_00011_00000000000; //['lt', '$r2', '$r1', '$r3']
mem_ram[97] = 32'b100010_00000_00010_0000000010011001; //['jei', '$r0', '$r2', 'L6']
mem_ram[98] = 32'b100011_11111_11101_0000000000000000; //['push', '$r31', '$r29']
mem_ram[99] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[100] = 32'b001101_11110_000000000000000010010; //['loadi', '$r30', 18]
mem_ram[101] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[102] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[103] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[104] = 32'b001101_11110_000000000000000010011; //['loadi', '$r30', 19]
mem_ram[105] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[106] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[107] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[108] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[109] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[110] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[111] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[112] = 32'b100001_00000000000000000000000100; //['jal', 'minloc']
mem_ram[113] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[114] = 32'b100100_11111_11101_0000000000000000; //['pop', '$r31', '$r29']
mem_ram[115] = 32'b001111_00001_11100_0000000000000000; //['move', '$r1', '$r28']
mem_ram[116] = 32'b001101_00010_000000000000000010100; //['loadi', '$r2', 20]
mem_ram[117] = 32'b001110_00001_00010_0000000000000000; //['store', '$r1', '$r2']
mem_ram[118] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[119] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[120] = 32'b001101_11110_000000000000000010100; //['loadi', '$r30', 20]
mem_ram[121] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[122] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[123] = 32'b001100_00011_00100_0000000000000000; //['load', '$r3', '$r4']
mem_ram[124] = 32'b001101_00001_000000000000000010101; //['loadi', '$r1', 21]
mem_ram[125] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[126] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[127] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[128] = 32'b001101_11110_000000000000000010011; //['loadi', '$r30', 19]
mem_ram[129] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[130] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[131] = 32'b001100_00011_00100_0000000000000000; //['load', '$r3', '$r4']
mem_ram[132] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[133] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[134] = 32'b001101_11110_000000000000000010100; //['loadi', '$r30', 20]
mem_ram[135] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[136] = 32'b000001_00100_00001_00010_00000000000; //['add', '$r4', '$r1', '$r2']
mem_ram[137] = 32'b001110_00011_00100_0000000000000000; //['store', '$r3', '$r4']
mem_ram[138] = 32'b001101_11110_000000000000000010000; //['loadi', '$r30', 16]
mem_ram[139] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[140] = 32'b001101_11110_000000000000000010011; //['loadi', '$r30', 19]
mem_ram[141] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[142] = 32'b000001_00011_00001_00010_00000000000; //['add', '$r3', '$r1', '$r2']
mem_ram[143] = 32'b001101_11110_000000000000000010101; //['loadi', '$r30', 21]
mem_ram[144] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[145] = 32'b001110_00001_00011_0000000000000000; //['store', '$r1', '$r3']
mem_ram[146] = 32'b001101_11110_000000000000000010011; //['loadi', '$r30', 19]
mem_ram[147] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[148] = 32'b001101_00010_000000000000000000001; //['loadi', '$r2', '1']
mem_ram[149] = 32'b000001_00011_00001_00010_00000000000; //['add', '$r3', '$r1', '$r2']
mem_ram[150] = 32'b001101_00001_000000000000000010011; //['loadi', '$r1', 19]
mem_ram[151] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[152] = 32'b010000_00000_000000000000001011010; //['jmpi', 'L5']
mem_ram[153] = 32'b001101_11100_000000000000000000000; //['loadi', '$r28', '0']
mem_ram[154] = 32'b010001_11111_000000000000000000000; //['jmp', '$r31']
mem_ram[155] = 32'b001101_00001_000000000000000010110; //['loadi', '$r1', 22]
mem_ram[156] = 32'b001101_00010_000000000000000000000; //['loadi', '$r2', '0']
mem_ram[157] = 32'b001110_00010_00001_0000000000000000; //['store', '$r2', '$r1']
mem_ram[158] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[159] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[160] = 32'b001101_00010_000000000000000000100; //['loadi', '$r2', '4']
mem_ram[161] = 32'b011111_00011_00001_00010_00000000000; //['lt', '$r3', '$r1', '$r2']
mem_ram[162] = 32'b100010_00000_00011_0000000010110001; //['jei', '$r0', '$r3', 'L8']
mem_ram[163] = 32'b010110_11100_000000000000000000000; //['in', '$r28']
mem_ram[164] = 32'b001111_00001_11100_0000000000000000; //['move', '$r1', '$r28']
mem_ram[165] = 32'b001101_00010_000000000000000000000; //['loadi', '$r2', 0]
mem_ram[166] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[167] = 32'b001100_00011_11110_0000000000000000; //['load', '$r3', '$r30']
mem_ram[168] = 32'b000001_00100_00010_00011_00000000000; //['add', '$r4', '$r2', '$r3']
mem_ram[169] = 32'b001110_00001_00100_0000000000000000; //['store', '$r1', '$r4']
mem_ram[170] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[171] = 32'b001100_00001_11110_0000000000000000; //['load', '$r1', '$r30']
mem_ram[172] = 32'b001101_00010_000000000000000000001; //['loadi', '$r2', '1']
mem_ram[173] = 32'b000001_00011_00001_00010_00000000000; //['add', '$r3', '$r1', '$r2']
mem_ram[174] = 32'b001101_00001_000000000000000010110; //['loadi', '$r1', 22]
mem_ram[175] = 32'b001110_00011_00001_0000000000000000; //['store', '$r3', '$r1']
mem_ram[176] = 32'b010000_00000_000000000000010011110; //['jmpi', 'L7']
mem_ram[177] = 32'b100011_11111_11101_0000000000000000; //['push', '$r31', '$r29']
mem_ram[178] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[179] = 32'b001101_00001_000000000000000000100; //['loadi', '$r1', '4']
mem_ram[180] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[181] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[182] = 32'b001101_00001_000000000000000000000; //['loadi', '$r1', '0']
mem_ram[183] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[184] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[185] = 32'b001101_00001_000000000000000000000; //['loadi', '$r1', 0]
mem_ram[186] = 32'b100011_00001_11101_0000000000000000; //['push', '$r1', '$r29']
mem_ram[187] = 32'b000010_11101_11101_0000000000000001; //['addi', '$r29', '$r29', '1']
mem_ram[188] = 32'b100001_00000000000000000001001010; //['jal', 'sort']
mem_ram[189] = 32'b000100_11101_11101_0000000000000001; //['subi', '$r29', '$r29', '1']
mem_ram[190] = 32'b100100_11111_11101_0000000000000000; //['pop', '$r31', '$r29']
mem_ram[191] = 32'b001111_00001_11100_0000000000000000; //['move', '$r1', '$r28']
mem_ram[192] = 32'b001101_00010_000000000000000010110; //['loadi', '$r2', 22]
mem_ram[193] = 32'b001101_00011_000000000000000000000; //['loadi', '$r3', '0']
mem_ram[194] = 32'b001110_00011_00010_0000000000000000; //['store', '$r3', '$r2']
mem_ram[195] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[196] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[197] = 32'b001101_00011_000000000000000000100; //['loadi', '$r3', '4']
mem_ram[198] = 32'b011111_00100_00010_00011_00000000000; //['lt', '$r4', '$r2', '$r3']
mem_ram[199] = 32'b100010_00000_00100_0000000011010101; //['jei', '$r0', '$r4', 'L10']
mem_ram[200] = 32'b001101_00010_000000000000000000000; //['loadi', '$r2', 0]
mem_ram[201] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[202] = 32'b001100_00011_11110_0000000000000000; //['load', '$r3', '$r30']
mem_ram[203] = 32'b000001_00101_00010_00011_00000000000; //['add', '$r5', '$r2', '$r3']
mem_ram[204] = 32'b001100_00100_00101_0000000000000000; //['load', '$r4', '$r5']
mem_ram[205] = 32'b010111_00100_000000000000000000000; //['out', '$r4']
mem_ram[206] = 32'b001101_11110_000000000000000010110; //['loadi', '$r30', 22]
mem_ram[207] = 32'b001100_00010_11110_0000000000000000; //['load', '$r2', '$r30']
mem_ram[208] = 32'b001101_00011_000000000000000000001; //['loadi', '$r3', '1']
mem_ram[209] = 32'b000001_00100_00010_00011_00000000000; //['add', '$r4', '$r2', '$r3']
mem_ram[210] = 32'b001101_00010_000000000000000010110; //['loadi', '$r2', 22]
mem_ram[211] = 32'b001110_00100_00010_0000000000000000; //['store', '$r4', '$r2']
mem_ram[212] = 32'b010000_00000_000000000000011000011; //['jmpi', 'L9']
mem_ram[213] = 32'b011001_00000000000000000000000000; // halt
